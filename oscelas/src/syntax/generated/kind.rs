#![allow(bad_style, missing_docs, unreachable_pub)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
#[repr(u16)]
pub enum OscDslSyntaxKind {
    #[doc(hidden)]
    TOMBSTONE,
    EOF,
    DOT,
    DOT_DOT,
    COMMA,
    COLON,
    COLON_COLON,
    ASSIGN,
    AT,
    ARROW,
    L_PAREN,
    R_PAREN,
    L_BRACKET,
    R_BRACKET,
    QUESTION,
    EXCLAMATION,
    FAT_ARROW,
    EQUAL,
    NOT_EQUAL,
    LESS,
    LESS_EQ,
    GREATER,
    GREATER_EQ,
    PLUS,
    MINUS,
    STAR,
    SLASH,
    PERCENT,
    A_KW,
    ACTION_KW,
    ACTOR_KW,
    AND_KW,
    AS_KW,
    BOOL_KW,
    CALL_KW,
    CD_KW,
    COVER_KW,
    DEF_KW,
    DEFAULT_KW,
    DO_KW,
    ELAPSED_KW,
    EMIT_KW,
    ENUM_KW,
    EVENT_KW,
    EVERY_KW,
    EXPORT_KW,
    EXPRESSION_KW,
    EXTEND_KW,
    EXTERNAL_KW,
    FACTOR_KW,
    FALL_KW,
    FALSE_KW,
    FLOAT_KW,
    GLOBAL_KW,
    HARD_KW,
    IF_KW,
    IMPORT_KW,
    IN_KW,
    INF_KW,
    INHERITS_KW,
    INT_KW,
    IS_KW,
    IT_KW,
    K_KW,
    KEEP_KW,
    KG_KW,
    LIST_KW,
    M_KW,
    MODIFIER_KW,
    MOL_KW,
    NAMESPACE_KW,
    NAN_KW,
    NOT_KW,
    NULL_KW,
    OF_KW,
    OFFSET_KW,
    ON_KW,
    ONE_OF_KW,
    ONLY_KW,
    OR_KW,
    PARALLEL_KW,
    RAD_KW,
    RANGE_KW,
    RECORD_KW,
    REMOVE_DEFAULT_KW,
    RISE_KW,
    S_KW,
    SAMPLE_KW,
    SCENARIO_KW,
    SERIAL_KW,
    SI_KW,
    STRING_KW,
    STRUCT_KW,
    TRUE_KW,
    TYPE_KW,
    UINT_KW,
    UNDEFINED_KW,
    UNIT_KW,
    UNTIL_KW,
    USE_KW,
    VAR_KW,
    WAIT_KW,
    WITH_KW,
    INTEGER_LITERAL,
    FLOAT_LITERAL,
    STRING_LITERAL,
    NEWLINE,
    INDENT,
    DEDENT,
    IDENTIFIER,
    WHITESPACE,
    COMMENT,
    NONLOGICAL_NEWLINE,
    SYNTAX_ELEMENT,
    BOGUS,
    EMPTY,
    QUALIFIED_IDENTIFIER,
    IDENTIFIER_PREFIX,
    NAMESPACE_NAME,
    BOOL_LITERAL,
    PHYSICAL_LITERAL,
    NUMBER_LITERAL,
    UNIT_NAME,
    OSC_FILE,
    PRELUDE_STATEMENT_LIST,
    MAIN_STATEMENT_LIST,
    PRELUDE_STATEMENT,
    MAIN_STATEMENT,
    IMPORT_STATEMENT,
    IMPORT_REFERENCE,
    IMPORT_REFERENCE_STRING,
    STRUCTURED_IDENTIFIER,
    STRUCTURED_IDENTIFIER_ELEMENT,
    NAMESPACE_STATEMENT,
    EXPORT_STATEMENT,
    OSC_DECLARATION,
    NAMESPACE_USE_CLAUSE,
    NAMESPACE_LIST,
    SIMPLE_NAMESPACE_NAME,
    GLOBAL_NAMESPACE_NAME,
    EXPORT_SPECIFICATION_LIST,
    EXPORT_SPECIFICATION,
    EXPORT_WILDCARD_SPECIFICATION,
    EXPORT_WILDCARD_SPECIFICATION_PREFIX,
    PHYSICAL_TYPE_DECLARATION,
    UNIT_DECLARATION,
    ENUM_DECLARATION,
    STRUCT_DECLARATION,
    ACTOR_DECLARATION,
    ACTION_DECLARATION,
    SCENARIO_DECLARATION,
    MODIFIER_DECLARATION,
    TYPE_EXTENSION,
    GLOBAL_PARAMETER_DECLARATION,
    TYPE_DECLARATOR,
    NON_AGGREGATE_TYPE_DECLARATOR,
    AGGREGATE_TYPE_DECLARATOR,
    PRIMITIVE_TYPE,
    PHYSICAL_TYPE_NAME,
    ENUM_NAME,
    STRUCT_NAME,
    ACTOR_NAME,
    QUALIFIED_BEHAVIOR_NAME,
    LIST_TYPE_DECLARATOR,
    BASE_UNIT_SPECIFIER,
    UNIT_SPECIFIER,
    SI_BASE_UNIT_SPECIFIER,
    SI_UNIT_SPECIFIER,
    SI_BASE_EXPONENT_LIST,
    SI_BASE_EXPONENT,
    SI_BASE_UNIT_NAME,
    TRAILING_SI_FACTOR,
    TRAILING_SI_OFFSET,
    ENUM_MEMBER_DECL_LIST,
    ENUM_MEMBER_DECL,
    ENUM_MEMBER_NAME,
    ENUM_MEMBER_INITIALIZER,
    ENUM_MEMBER_VALUE,
    ENUM_VALUE_REFERENCE,
    ENUM_VALUE_REFERENCE_PREFIX,
    STRUCT_INHERITS_CLAUSE,
    STRUCT_BODY_OR_EMPTY,
    STRUCT_INHERITS_CONDITION,
    FIELD_NAME,
    STRUCT_INHERITS_CONSTANT,
    STRUCT_BODY,
    STRUCT_MEMBER_DECL_LIST,
    STRUCT_MEMBER_DECL,
    EVENT_DECLARATION,
    FIELD_DECLARATION,
    CONSTRAINT_DECLARATION,
    METHOD_DECLARATION,
    COVERAGE_DECLARATION,
    ACTOR_INHERITS_CLAUSE,
    ACTOR_BODY_OR_EMPTY,
    ACTOR_INHERITS_CONDITION,
    ACTOR_INHERITS_CONSTANT,
    ACTOR_BODY,
    ACTOR_MEMBER_DECL_LIST,
    ACTOR_MEMBER_DECL,
    SCENARIO_INHERITS_CLAUSE,
    SCENARIO_BODY_OR_EMPTY,
    SCENARIO_INHERITS_CONDITION,
    SCENARIO_INHERITS_CONSTANT,
    SCENARIO_BODY,
    SCENARIO_MEMBER_ITEM_LIST,
    SCENARIO_MEMBER_ITEM,
    SCENARIO_MEMBER_DECL,
    BEHAVIOR_SPECIFICATION,
    QUALIFIED_BEHAVIOR_NAME_PREFIX,
    BEHAVIOR_NAME,
    ACTION_INHERITS_CLAUSE,
    ACTION_BODY_OR_EMPTY,
    ACTION_BODY,
    ACTION_INHERITS_CONDITION,
    ACTION_INHERITS_CONSTANT,
    ACTION_MEMBER_ITEM_LIST,
    ACTION_MEMBER_ITEM,
    MODIFIER_NAME_PREFIX,
    MODIFIER_NAME,
    MODIFIER_OF_CLAUSE,
    MODIFIER_BODY_OR_EMPTY,
    MODIFIER_BODY,
    MODIFIER_MEMBER_ITEM_LIST,
    MODIFIER_MEMBER_ITEM,
    ON_DIRECTIVE,
    ENUM_TYPE_EXTENSION,
    STRUCTURED_TYPE_EXTENSION,
    EXTENDABLE_TYPE_NAME,
    EXTENDABLE_MEMBER_DECL_LIST,
    EXTENDABLE_MEMBER_DECL,
    PARAMETER_DECLARATION,
    EVENT_NAME,
    EVENT_ARGUMENT_LIST_SPECIFICATION,
    EVENT_IS_CLAUSE,
    ARGUMENT_LIST_SPECIFICATION,
    EVENT_SPECIFICATION,
    EVENT_REFERENCE_SPECIFICATION,
    EVENT_CONDITION,
    EVENT_REFERENCE,
    EVENT_REFERENCE_CONDITION,
    EVENT_FIELD_DECL,
    EVENT_PATH,
    EVENT_FIELD_NAME,
    EVENT_PATH_PREFIX,
    EXPRESSION,
    BOOL_EXPRESSION,
    RISE_EXPRESSION,
    FALL_EXPRESSION,
    ELAPSED_EXPRESSION,
    EVERY_EXPRESSION,
    DURATION_EXPRESSION,
    TRAILING_EVERY_EXP_OFFSET,
    VARIABLE_DECLARATION,
    FIELD_NAME_LIST,
    PARAMETER_INITILIZER_CLAUSE,
    PARAMETER_WITH_DECLARATION_OR_EMPTY,
    DEFAULT_VALUE,
    VARIABLE_INITIALIZER,
    VARIABLE_INITIALIZER_VALUE,
    SAMPLE_EXPRESSION,
    SAMPLE_DEFAULT_VALUE,
    PARAMETER_WITH_DECLARATION,
    PARAMETER_WITH_MEMBER,
    KEEP_CONSTRAINT_DECLARATION,
    REMOVE_DEFAULT_DECLARATION,
    CONSTRAINT_QUALIFIER,
    CONSTRAINT_EXPRESSION,
    PARAMETER_REFERENCE,
    FIELD_ACCESS,
    METHOD_NAME,
    METHOD_RETURN_TYPE,
    METHOD_IMPLEMENTATION,
    RETURN_TYPE,
    METHOD_QUALIFIER,
    METHOD_BODY,
    METHOD_EXPRESSION_BODY,
    METHOD_UNDEFINED_BODY,
    METHOD_EXTERNAL_BODY,
    ARGUMENT_LIST,
    COVERAGE_OPERATOR,
    MODIFIER_APPLICATION,
    MODIFIER_APPLICATION_PREFIX,
    ACTOR_EXPRESSION,
    DO_DIRECTIVE,
    ON_MEMBER_LIST,
    ON_MEMBER,
    CALL_DIRECTIVE,
    EMIT_DIRECTIVE,
    DO_MEMBER,
    DO_MEMBER_LABEL,
    DO_MEMBER_BODY,
    LABEL_NAME,
    COMPOSITION,
    BEHAVIOR_INVOCATION,
    WAIT_DIRECTIVE,
    COMPOSITION_OPERATOR,
    COMPOSITION_ARGUMENTS,
    DO_MEMBER_LIST,
    BEHAVIOR_WITH_DECLARATION,
    UNQUALIFIED_ARGUMENT_LIST,
    BEHAVIOR_INVOCATION_PREFIX,
    BEHAVIOR_WITH_DECLARATION_OR_EMPTY,
    BEHAVIOR_WITH_MEMBER_LIST,
    BEHAVIOR_WITH_MEMBER,
    UNTIL_DIRECTIVE,
    EMIT_ARGUMENTS,
    METHOD_INVOCATION,
    ARGUMENT_SPECIFICATION,
    ARGUMENT_NAME,
    ARGUMENT_INITIALIZER,
    POSITIONAL_ARGUMENT_LIST,
    NAMED_ARGUMENT_LIST,
    POSITIONAL_ARGUMENT,
    NAMED_ARGUMENT,
    UNQUALIFIED_NAMED_ARGUMENT_LIST,
    UNQUALIFIED_NAMED_ARGUMENT,
    UNQUALIFIED_ARGUMENT_NAME,
    TERNARY_OP_EXP,
    LOGICAL_OP_EXP,
    BINARY_OP_EXP,
    UNARY_OP_EXP,
    CAST_EXP,
    TYPE_TEST_EXP,
    ELEMENT_ACCESS,
    FUNCTION_APPLICATION,
    IT_EXP,
    PARENTHESIZED_EXP,
    LITERAL_EXP,
    LIST_CONSTRUCTOR,
    RANGE_CONSTRUCTOR,
    LOGICAL_OP,
    BINARY_OP,
    UNARY_OP,
    INTEGER_LITERAL_EXP,
    FLOAT_LITERAL_EXP,
    PHYSICAL_LITERAL_EXP,
    BOOL_LITERAL_EXP,
    STRING_LITERAL_EXP,
    EXPRESSION_LIST,
    PARENTHESES_RANGE_CONSTRUCTOR,
    BRACKETS_RANGE_CONSTRUCTOR,
    #[doc(hidden)]
    __LAST,
}
use self::OscDslSyntaxKind::*;
impl OscDslSyntaxKind {
    pub fn is_list(self) -> bool {
        matches!(
            self,
            PRELUDE_STATEMENT_LIST
                | MAIN_STATEMENT_LIST
                | STRUCT_MEMBER_DECL_LIST
                | ACTOR_MEMBER_DECL_LIST
                | SCENARIO_MEMBER_ITEM_LIST
                | ACTION_MEMBER_ITEM_LIST
                | MODIFIER_MEMBER_ITEM_LIST
                | EXTENDABLE_MEMBER_DECL_LIST
                | ON_MEMBER_LIST
                | DO_MEMBER_LIST
                | BEHAVIOR_WITH_MEMBER_LIST
        )
    }
    pub fn to_string(self) -> Option<&'static str> {
        let result = match self {
            DOT => ".",
            DOT_DOT => "..",
            COMMA => ",",
            COLON => ":",
            COLON_COLON => "::",
            ASSIGN => "=",
            AT => "@",
            ARROW => "->",
            L_PAREN => "(",
            R_PAREN => ")",
            L_BRACKET => "[",
            R_BRACKET => "]",
            QUESTION => "?",
            EXCLAMATION => "!",
            FAT_ARROW => "=>",
            EQUAL => "==",
            NOT_EQUAL => "!=",
            LESS => "<",
            LESS_EQ => "<=",
            GREATER => ">",
            GREATER_EQ => ">=",
            PLUS => "+",
            MINUS => "-",
            STAR => "*",
            SLASH => "/",
            PERCENT => "%",
            A_KW => "A",
            ACTION_KW => "action",
            ACTOR_KW => "actor",
            AND_KW => "and",
            AS_KW => "as",
            BOOL_KW => "bool",
            CALL_KW => "call",
            CD_KW => "cd",
            COVER_KW => "cover",
            DEF_KW => "def",
            DEFAULT_KW => "default",
            DO_KW => "do",
            ELAPSED_KW => "elapsed",
            EMIT_KW => "emit",
            ENUM_KW => "enum",
            EVENT_KW => "event",
            EVERY_KW => "every",
            EXPORT_KW => "export",
            EXPRESSION_KW => "expression",
            EXTEND_KW => "extend",
            EXTERNAL_KW => "external",
            FACTOR_KW => "factor",
            FALL_KW => "fall",
            FALSE_KW => "false",
            FLOAT_KW => "float",
            GLOBAL_KW => "global",
            HARD_KW => "hard",
            IF_KW => "if",
            IMPORT_KW => "import",
            IN_KW => "in",
            INF_KW => "inf",
            INHERITS_KW => "inherits",
            INT_KW => "int",
            IS_KW => "is",
            IT_KW => "it",
            K_KW => "K",
            KEEP_KW => "keep",
            KG_KW => "kg",
            LIST_KW => "list",
            M_KW => "m",
            MODIFIER_KW => "modifier",
            MOL_KW => "mol",
            NAMESPACE_KW => "namespace",
            NAN_KW => "nan",
            NOT_KW => "not",
            NULL_KW => "null",
            OF_KW => "of",
            OFFSET_KW => "offset",
            ON_KW => "on",
            ONE_OF_KW => "one_of",
            ONLY_KW => "only",
            OR_KW => "or",
            PARALLEL_KW => "parallel",
            RAD_KW => "rad",
            RANGE_KW => "range",
            RECORD_KW => "record",
            REMOVE_DEFAULT_KW => "remove_default",
            RISE_KW => "rise",
            S_KW => "s",
            SAMPLE_KW => "sample",
            SCENARIO_KW => "scenario",
            SERIAL_KW => "serial",
            SI_KW => "SI",
            STRING_KW => "string",
            STRUCT_KW => "struct",
            TRUE_KW => "true",
            TYPE_KW => "type",
            UINT_KW => "uint",
            UNDEFINED_KW => "undefined",
            UNIT_KW => "unit",
            UNTIL_KW => "until",
            USE_KW => "use",
            VAR_KW => "var",
            WAIT_KW => "wait",
            WITH_KW => "with",
            _ => return None,
        };
        return Some(result);
    }
}